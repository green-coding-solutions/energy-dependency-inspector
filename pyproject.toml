[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dependency-resolver"
version = "0.1.0"
description = "A standalone dependency resolver that exports JSON with all project dependencies"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Green Coding Solutions"}
]
keywords = ["dependencies", "docker", "containers", "package-manager", "security"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["dependencies", "optional-dependencies"]


[project.scripts]
dependency-resolver = "dependency_resolver:main"

[project.urls]
Repository = "https://github.com/green-coding-solutions/dependency-resolver"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "detectors*", "utils*"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies.dev = {file = ["requirements-dev.txt"]}
optional-dependencies.docker = {file = ["requirements-docker.txt"]}
optional-dependencies.podman = {file = ["requirements-podman.txt"]}

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Pylint configuration is in .pylintrc

[tool.black]
line-length = 120
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
